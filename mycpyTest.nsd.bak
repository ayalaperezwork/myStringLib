<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.32-06" preRepeat="until" postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" namespace="" author="mariana" created="2022-11-25" changedby="mariana" changed="2022-11-25" origin="Structorizer 3.32-06" text="&#34;mycpyTest&#34;" comment="&#34;&#34;" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;char target := {'0', '0', '0', '0', '0', '0', }&#34;,&#34;char source := {'a', 'p', 'p' ,'l', 'e', '\0'}&#34;,&#34;int limit := 6&#34;,&#34;int count := 0&#34;,&#34;int result := 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<while text="&#34;while (source[count] != '\0' &amp;&amp; count &#60; limit)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qWhile>
				<instruction text="&#34;target[count] := source[count];&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;count := count + 1;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qWhile>
		</while>
		<instruction text="&#34;target[count] := '\0';&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<alternative text="&#34;(count  =  limit)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qTrue>
				<instruction text="&#34;result := 2&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qTrue>
			<qFalse>
				<instruction text="&#34;result := 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qFalse>
		</alternative>
	</children>
</root>